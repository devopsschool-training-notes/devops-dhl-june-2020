What is Maven?
========================
	Project Flow mgmt tool
		- Build mgmt 
	Automation KIT for Dev and QA
	For JAVA Project
	Written in Java
		-- JVM -> JRE or JDK
		-- Playform independent
	Free and Open source
	Dev by Apache.
	Plugins based	
	

Psucode of Build mgmt...
=============================
Software --> modules --> 20
	- Each module create dir str
	- Each Module Code Download
	- Each Module Download dependent lib 
	- Compile
	- UT
	- TEST
	- Package
	- verify....	
	- Upload to Artifactory....
	====================================
	EVERY TIME U CHANGE a CODE
		- WORKSTATION of Dev and QA
		- CI SERVER
	=======================================
	20 times....
===================================================
	Build mgmt tool.


other tools
Makefile --> Ant --> Maven --> Gradle
msbuild - nnant - pybuild - rake

How maven works!!!!! Maven Architecture
============================================
All Feature in Maven comes from Plugins...


Core
	Core plugins dev by Apache
	Communty plugins dev by community
	---------------
	100+++
=========================================
Lifecyle of Human Being???
===================================
			Phases
----------------------------------------------------
Born -> Kid --> Teen --> Young -> Mid -> Old -> DiE	= ONE CYCLE

Software project has a lifecycle.
			Phases
----------------------------------------------------
===========================================================
compile -> UT -> package -> test -> release		= ENDLESS CYCLE
--------------------------------------------------------------------
CTO --> 100 Product - 100 Diff LifeCycle...

	- Each module create dir str
	- Each Module Code Download
	- Each Module Download dependent lib 
	- Compile
	- UT
	- TEST
	- Package
	- verify....	
	- Upload to Artifactory....
=======================================================
	maven has automated everything.
=========================================================
Maven has 3 LIFECYCLE(Built-in) to manaage a software project...
https://maven.apache.org/ref/3.6.3/maven-core/lifecycles.html

==========================================================================
DHlX...

PHASES		How to reach to that Phase 
		of software project????

		goal		Goal in written in plugins
----------------------------------------------------------------
compile		compile		Core plugins
test		test		Core plugins
package		package		Core plugins
verify		verify		Core plugins
install		install		Core plugins

============================================================
projectName - dhlx
groupid
artifactid
version		
		SNAPSHOT - NOT Stable - 1.0-SNAPSHOT	1.0.1-SNAPSHOT
		RELEASE - Stable	1.0	1.0.1	


packaging	- jar - war - ear - pom
website-url

What is groupid?
---------------------------

microsoft
	msword		artifactid
	msexcel		artifactid
	mspre		artifactid
	msaccess	artifactid	
====================================
com.microsoft.software.		=== groupid
com.microsoft.software.msword
com.microsoft.software.msexcel
com.microsoft.software.mspre
com.microsoft.software.msaccess
org.microsoft.software.
===============================================
How to install maven?
=========================
	- JDK ( NO JRE) ISNTALLED
	- JAVA_HOME env must be set		C:\tools\Java\jdk1.8.0_231
	- JAVA_HOME/BIN must be set in PATH env var.	C:\tools\Java\jdk1.8.0_231\bin
	- Download Maven Zip		https://maven.apache.org/download.cgi
	- Extract it			C:\tools\maven
	- MAVEN_HOME/bin must be set in PATH env var.	C:\tools\maven\bin
======================================
Workflow with Maven from FIRST
======================================
Step 1 -  Create a proj dir structure
mvn archetype:generate
-DgroupId=com.companyname.software
-DartifactId=financialService
-DarchetypeArtifactId=maven-archetype-quickstart
-DinteractiveMode=false

archetype = core plugins
https://maven.apache.org/archetype/maven-archetype-plugin/index.html

generate = goal name
archetypeArtifactId = https://maven.apache.org/archetypes/index.html 

mvn archetype:generate -DgroupId=com.companyname.software -DartifactId=financialService -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false

mvn archetype:generate -DgroupId=com.dhl.software -DartifactId=chat -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false

Step 2 - compile 
$ mvn compile

Step 3 - test 
$ mvn test

Step 4 - package

$ mvn package

Vivian - 	15.206.205.8		centos	centos123
Jahabar		35.154.11.108		centos	centos123
Annam  		13.126.149.183		centos	centos123

How to install JDk 8 in Linux?
$ sudo yum install java-1.8.0-openjdk-devel

How to download Maven?
$ sudo yum install wget
$ wget https://mirrors.estointernet.in/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.zip
$ sudo yum install unzip
$ unzip apache-maven-3.6.3-bin.zip
$ export PATH=$PATH:/home/centos/apache-maven-3.6.3/bin

======================================================
======================================================
How to manage a Dependency of a project in Maven?
============================================
Step 1. Dependent Lib you keep in pom.xml
-------------

What is pom.xml?	
------------------
a file 
which contains all required config for your project.
Such as.
	groupid
	artif
	name
	version
	website
	copyright
	dependency
	properties
	-----
	plugins
	profiles
	many more...

Step 2. Maven would Check in Local Repo = C:\Users\Rajesh Kumar\.m2\repository



Step 3. If "Local Repo" is not having that - Go to "central repo" and then download back to local repo and use in JVM.

https://repo.maven.apache.org/maven2/

=============================================================
=============================================================
What is Artifactory
	- Store packages
	- Versioning of the packages.
	- dev in Java
		- JRE

What kind of Packages?
----------------------------
https://www.jfrog.com/confluence/display/JFROG/Repository+Management


Why we need this?
	- Securing a package
	- Having a defined enterprise process
	- role based access to the packages
	- Durability
	- Easy admin activity
		- cleanup
		- backup
	
How to install Artifactory?
==================================
13.232.174.143
centos
	---
How to install JDk 8 in Linux?
$ sudo yum install java-1.8.0-openjdk-devel

How to download Maven?
$ sudo yum install wget

http://13.232.174.143:8082/ui/
======================================
Why Artifactory
-----
Upload
=================================================
1. Create a repo	DONE

2. get a access to upload
admin
admin123

3. Add repo location in pom.xml	DONE

4. Add access in setting.xml

     <server>
		<id>central</id>
		<username>admin</username>
		<password>admin123</password>
</server>
### Special ID element in the POM.xml and setting.xml must match.


5. mvn deploy

Example Project - https://github.com/scmgalaxy/helloworld-java-maven

How to download using Artifactory
=======================================
Step 1 - Do you have 2 Module????

Step 2 - Do you have one module dependent on another module?

Step 3.  Did you modify a pom.xml with dependent lib?

Step 4 - Did you modify setting.xml mirror element to go to Artifactory?



Repo to Upload - http://13.232.174.143:8081/artifactory/list/all
Repo Group to Download - http://13.232.174.143:8081/artifactory/dhl-all/

1. Create 2 project...
	Name1 - firstname
	Name2 - lastname
2. Add pom.xml entry for UPLOAD to artifactory repo

<distributionManagement>
    <repository>
        <id>central</id>
        <name>ip-172-31-29-73.ap-south-1.compute.internal-releases</name>
        <url>http://13.232.174.143:8081/artifactory/list/all</url>
    </repository>
    <snapshotRepository>
        <id>central</id>
        <name>ip-172-31-29-73.ap-south-1.compute.internal-snapshots</name>
        <url>http://13.232.174.143:8081/artifactory/list/all</url>
    </snapshotRepository>
</distributionManagement>

3. Name1 is dependent on Name2 prj - Add entry in pom.xom

3. Run Name1...to check dependency download.







